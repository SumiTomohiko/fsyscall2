package jp.gr.java_conf.neko_daisuki.fsyscall;

public class Errno {

    /*
     * The following list was generated by::
     *
     *     $ cat foo.pl
     *     while (<>) {
     *         chomp;
     *         s/^#define\t+//;
     *         s/\t*\/\*.*$//;
     *         ($name, $value) = split /[ \t]+/;
     *         printf "    public static final Errno %s = new Errno(%s);\n", $name, $value;
     *     }
     *     $ grep -w define /usr/include/errno.h | perl foo.pl
     */
    public static final Errno EPERM = new Errno(1);
    public static final Errno ENOENT = new Errno(2);
    public static final Errno ESRCH = new Errno(3);
    public static final Errno EINTR = new Errno(4);
    public static final Errno EIO = new Errno(5);
    public static final Errno ENXIO = new Errno(6);
    public static final Errno E2BIG = new Errno(7);
    public static final Errno ENOEXEC = new Errno(8);
    public static final Errno EBADF = new Errno(9);
    public static final Errno ECHILD = new Errno(10);
    public static final Errno EDEADLK = new Errno(11);
    public static final Errno ENOMEM = new Errno(12);
    public static final Errno EACCES = new Errno(13);
    public static final Errno EFAULT = new Errno(14);
    public static final Errno ENOTBLK = new Errno(15);
    public static final Errno EBUSY = new Errno(16);
    public static final Errno EEXIST = new Errno(17);
    public static final Errno EXDEV = new Errno(18);
    public static final Errno ENODEV = new Errno(19);
    public static final Errno ENOTDIR = new Errno(20);
    public static final Errno EISDIR = new Errno(21);
    public static final Errno EINVAL = new Errno(22);
    public static final Errno ENFILE = new Errno(23);
    public static final Errno EMFILE = new Errno(24);
    public static final Errno ENOTTY = new Errno(25);
    public static final Errno ETXTBSY = new Errno(26);
    public static final Errno EFBIG = new Errno(27);
    public static final Errno ENOSPC = new Errno(28);
    public static final Errno ESPIPE = new Errno(29);
    public static final Errno EROFS = new Errno(30);
    public static final Errno EMLINK = new Errno(31);
    public static final Errno EPIPE = new Errno(32);
    public static final Errno EDOM = new Errno(33);
    public static final Errno ERANGE = new Errno(34);
    public static final Errno EAGAIN = new Errno(35);
    public static final Errno EWOULDBLOCK = new Errno(EAGAIN);
    public static final Errno EINPROGRESS = new Errno(36);
    public static final Errno EALREADY = new Errno(37);
    public static final Errno ENOTSOCK = new Errno(38);
    public static final Errno EDESTADDRREQ = new Errno(39);
    public static final Errno EMSGSIZE = new Errno(40);
    public static final Errno EPROTOTYPE = new Errno(41);
    public static final Errno ENOPROTOOPT = new Errno(42);
    public static final Errno EPROTONOSUPPORT = new Errno(43);
    public static final Errno ESOCKTNOSUPPORT = new Errno(44);
    public static final Errno EOPNOTSUPP = new Errno(45);
    public static final Errno ENOTSUP = new Errno(EOPNOTSUPP);
    public static final Errno EPFNOSUPPORT = new Errno(46);
    public static final Errno EAFNOSUPPORT = new Errno(47);
    public static final Errno EADDRINUSE = new Errno(48);
    public static final Errno EADDRNOTAVAIL = new Errno(49);
    public static final Errno ENETDOWN = new Errno(50);
    public static final Errno ENETUNREACH = new Errno(51);
    public static final Errno ENETRESET = new Errno(52);
    public static final Errno ECONNABORTED = new Errno(53);
    public static final Errno ECONNRESET = new Errno(54);
    public static final Errno ENOBUFS = new Errno(55);
    public static final Errno EISCONN = new Errno(56);
    public static final Errno ENOTCONN = new Errno(57);
    public static final Errno ESHUTDOWN = new Errno(58);
    public static final Errno ETOOMANYREFS = new Errno(59);
    public static final Errno ETIMEDOUT = new Errno(60);
    public static final Errno ECONNREFUSED = new Errno(61);
    public static final Errno ELOOP = new Errno(62);
    public static final Errno ENAMETOOLONG = new Errno(63);
    public static final Errno EHOSTDOWN = new Errno(64);
    public static final Errno EHOSTUNREACH = new Errno(65);
    public static final Errno ENOTEMPTY = new Errno(66);
    public static final Errno EPROCLIM = new Errno(67);
    public static final Errno EUSERS = new Errno(68);
    public static final Errno EDQUOT = new Errno(69);
    public static final Errno ESTALE = new Errno(70);
    public static final Errno EREMOTE = new Errno(71);
    public static final Errno EBADRPC = new Errno(72);
    public static final Errno ERPCMISMATCH = new Errno(73);
    public static final Errno EPROGUNAVAIL = new Errno(74);
    public static final Errno EPROGMISMATCH = new Errno(75);
    public static final Errno EPROCUNAVAIL = new Errno(76);
    public static final Errno ENOLCK = new Errno(77);
    public static final Errno ENOSYS = new Errno(78);
    public static final Errno EFTYPE = new Errno(79);
    public static final Errno EAUTH = new Errno(80);
    public static final Errno ENEEDAUTH = new Errno(81);
    public static final Errno EIDRM = new Errno(82);
    public static final Errno ENOMSG = new Errno(83);
    public static final Errno EOVERFLOW = new Errno(84);
    public static final Errno ECANCELED = new Errno(85);
    public static final Errno EILSEQ = new Errno(86);
    public static final Errno ENOATTR = new Errno(87);
    public static final Errno EDOOFUS = new Errno(88);
    public static final Errno EBADMSG = new Errno(89);
    public static final Errno EMULTIHOP = new Errno(90);
    public static final Errno ENOLINK = new Errno(91);
    public static final Errno EPROTO = new Errno(92);
    public static final Errno ENOTCAPABLE = new Errno(93);
    public static final Errno ECAPMODE = new Errno(94);
    public static final Errno ELAST = new Errno(94);
    public static final Errno ERESTART = new Errno((-1));
    public static final Errno EJUSTRETURN = new Errno((-2));
    public static final Errno ENOIOCTL = new Errno((-3));
    public static final Errno EDIRIOCTL = new Errno((-4));

    private int mValue;

    public int toInteger() {
        return mValue;
    }

    private Errno(int value) {
        initialize(value);
    }

    private Errno(Errno errno) {
        initialize(errno.toInteger());
    }

    private void initialize(int value) {
        mValue = value;
    }
}

/**
 * vim: tabstop=4 shiftwidth=4 expandtab softtabstop=4
 */
